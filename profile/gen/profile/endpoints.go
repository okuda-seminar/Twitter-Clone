// Code generated by goa v3.14.0, DO NOT EDIT.
//
// profile endpoints
//
// Command:
// $ goa gen profile/design

package profile

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "profile" service endpoints.
type Endpoints struct {
	CreateUser     goa.Endpoint
	DeleteUser     goa.Endpoint
	FindByID       goa.Endpoint
	UpdateUsername goa.Endpoint
	UpdateBio      goa.Endpoint
}

// NewEndpoints wraps the methods of the "profile" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CreateUser:     NewCreateUserEndpoint(s),
		DeleteUser:     NewDeleteUserEndpoint(s),
		FindByID:       NewFindByIDEndpoint(s),
		UpdateUsername: NewUpdateUsernameEndpoint(s),
		UpdateBio:      NewUpdateBioEndpoint(s),
	}
}

// Use applies the given middleware to all the "profile" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreateUser = m(e.CreateUser)
	e.DeleteUser = m(e.DeleteUser)
	e.FindByID = m(e.FindByID)
	e.UpdateUsername = m(e.UpdateUsername)
	e.UpdateBio = m(e.UpdateBio)
}

// NewCreateUserEndpoint returns an endpoint function that calls the method
// "CreateUser" of service "profile".
func NewCreateUserEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateUserPayload)
		return s.CreateUser(ctx, p)
	}
}

// NewDeleteUserEndpoint returns an endpoint function that calls the method
// "DeleteUser" of service "profile".
func NewDeleteUserEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteUserPayload)
		return nil, s.DeleteUser(ctx, p)
	}
}

// NewFindByIDEndpoint returns an endpoint function that calls the method
// "FindByID" of service "profile".
func NewFindByIDEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*FindByIDPayload)
		return s.FindByID(ctx, p)
	}
}

// NewUpdateUsernameEndpoint returns an endpoint function that calls the method
// "UpdateUsername" of service "profile".
func NewUpdateUsernameEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateUsernamePayload)
		return nil, s.UpdateUsername(ctx, p)
	}
}

// NewUpdateBioEndpoint returns an endpoint function that calls the method
// "UpdateBio" of service "profile".
func NewUpdateBioEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateBioPayload)
		return nil, s.UpdateBio(ctx, p)
	}
}
