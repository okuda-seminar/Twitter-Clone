// Code generated by goa v3.14.0, DO NOT EDIT.
//
// profile HTTP server encoders and decoders
//
// Command:
// $ goa gen profile/design

package server

import (
	"context"
	"net/http"
	profile "profile/gen/profile"
	"strconv"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// EncodeFindByIDResponse returns an encoder for responses returned by the
// profile FindByID endpoint.
func EncodeFindByIDResponse(encoder func(context.Context, http.ResponseWriter) goahttp.Encoder) func(context.Context, http.ResponseWriter, any) error {
	return func(ctx context.Context, w http.ResponseWriter, v any) error {
		res, _ := v.(*profile.User)
		enc := encoder(ctx, w)
		body := NewFindByIDResponseBody(res)
		w.WriteHeader(http.StatusOK)
		return enc.Encode(body)
	}
}

// DecodeFindByIDRequest returns a decoder for requests sent to the profile
// FindByID endpoint.
func DecodeFindByIDRequest(mux goahttp.Muxer, decoder func(*http.Request) goahttp.Decoder) func(*http.Request) (any, error) {
	return func(r *http.Request) (any, error) {
		var (
			id  int
			err error

			params = mux.Vars(r)
		)
		{
			idRaw := params["id"]
			v, err2 := strconv.ParseInt(idRaw, 10, strconv.IntSize)
			if err2 != nil {
				err = goa.MergeErrors(err, goa.InvalidFieldTypeError("id", idRaw, "integer"))
			}
			id = int(v)
		}
		if err != nil {
			return nil, err
		}
		payload := NewFindByIDPayload(id)

		return payload, nil
	}
}
