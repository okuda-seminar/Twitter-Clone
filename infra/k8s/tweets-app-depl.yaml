apiVersion: apps/v1
kind: Deployment
metadata:
  name: tweets-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tweets-app
  template:
    metadata:
      labels:
        app: tweets-app
    spec:
      initContainers:
      - name: migrate-db
        image: rwatana/tweets_app:latest
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        env:
        - name: USERS_POSTGRES_URL
          value: postgres://postgres:postgres@tweets-postgres:5432/postgres?sslmode=disable

        args:
          - |
            migrate -database ${USERS_POSTGRES_URL} -path /app/db/migrations up
        volumeMounts:
        - name: migration-files
          mountPath: /app/db/migrations
      containers:
      - name: app
        image: rwatana/tweets_app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        command: ["tail", "-f", "/dev/null"]
        volumeMounts:
        - name: app-source
          mountPath: /go/src/app
      volumes:
      - name: migration-files
        configMap:
          name: migration-files
      - name: app-source
        hostPath:
          path: /path/to/your/local/app/source
---
apiVersion: v1
kind: Service
metadata:
  name: tweets-app
  namespace: default
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: tweets-app
