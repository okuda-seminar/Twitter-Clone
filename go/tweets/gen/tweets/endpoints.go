// Code generated by goa v3.15.2, DO NOT EDIT.
//
// tweets endpoints
//
// Command:
// $ goa gen tweets/design

package tweets

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "tweets" service endpoints.
type Endpoints struct {
	CreatePost      goa.Endpoint
	DeleteTweet     goa.Endpoint
	LikeTweet       goa.Endpoint
	DeleteTweetLike goa.Endpoint
	Retweet         goa.Endpoint
	DeleteRetweet   goa.Endpoint
	CreateReply     goa.Endpoint
	DeleteReply     goa.Endpoint
}

// NewEndpoints wraps the methods of the "tweets" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CreatePost:      NewCreatePostEndpoint(s),
		DeleteTweet:     NewDeleteTweetEndpoint(s),
		LikeTweet:       NewLikeTweetEndpoint(s),
		DeleteTweetLike: NewDeleteTweetLikeEndpoint(s),
		Retweet:         NewRetweetEndpoint(s),
		DeleteRetweet:   NewDeleteRetweetEndpoint(s),
		CreateReply:     NewCreateReplyEndpoint(s),
		DeleteReply:     NewDeleteReplyEndpoint(s),
	}
}

// Use applies the given middleware to all the "tweets" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreatePost = m(e.CreatePost)
	e.DeleteTweet = m(e.DeleteTweet)
	e.LikeTweet = m(e.LikeTweet)
	e.DeleteTweetLike = m(e.DeleteTweetLike)
	e.Retweet = m(e.Retweet)
	e.DeleteRetweet = m(e.DeleteRetweet)
	e.CreateReply = m(e.CreateReply)
	e.DeleteReply = m(e.DeleteReply)
}

// NewCreatePostEndpoint returns an endpoint function that calls the method
// "CreatePost" of service "tweets".
func NewCreatePostEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreatePostPayload)
		return s.CreatePost(ctx, p)
	}
}

// NewDeleteTweetEndpoint returns an endpoint function that calls the method
// "DeleteTweet" of service "tweets".
func NewDeleteTweetEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteTweetPayload)
		return nil, s.DeleteTweet(ctx, p)
	}
}

// NewLikeTweetEndpoint returns an endpoint function that calls the method
// "LikeTweet" of service "tweets".
func NewLikeTweetEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*LikeTweetPayload)
		return nil, s.LikeTweet(ctx, p)
	}
}

// NewDeleteTweetLikeEndpoint returns an endpoint function that calls the
// method "DeleteTweetLike" of service "tweets".
func NewDeleteTweetLikeEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteTweetLikePayload)
		return nil, s.DeleteTweetLike(ctx, p)
	}
}

// NewRetweetEndpoint returns an endpoint function that calls the method
// "Retweet" of service "tweets".
func NewRetweetEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*RetweetPayload)
		return nil, s.Retweet(ctx, p)
	}
}

// NewDeleteRetweetEndpoint returns an endpoint function that calls the method
// "DeleteRetweet" of service "tweets".
func NewDeleteRetweetEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteRetweetPayload)
		return nil, s.DeleteRetweet(ctx, p)
	}
}

// NewCreateReplyEndpoint returns an endpoint function that calls the method
// "CreateReply" of service "tweets".
func NewCreateReplyEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateReplyPayload)
		return s.CreateReply(ctx, p)
	}
}

// NewDeleteReplyEndpoint returns an endpoint function that calls the method
// "DeleteReply" of service "tweets".
func NewDeleteReplyEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteReplyPayload)
		return nil, s.DeleteReply(ctx, p)
	}
}
