openapi: 3.0.3
info:
    title: Users Service
    description: Service for managing users
    version: "1.0"
servers:
    - url: http://0.0.0.0:80/api/users
paths:
    /api/users:
        delete:
            tags:
                - users
            summary: DeleteUser users
            operationId: users#DeleteUser
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteUserRequestBody'
                        example:
                            id: 6737525150749713813
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - users
            summary: CreateUser users
            operationId: users#CreateUser
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequestBody'
                        example:
                            username: Laudantium eum velit qui.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            example:
                                bio: Expedita sunt quisquam adipisci blanditiis recusandae.
                                username: Et nobis sunt qui consequatur.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/users/{id}:
        get:
            tags:
                - users
            summary: FindUserByID users
            operationId: users#FindUserByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    example: 1719386828064031913
                    format: int64
                  example: 1730839370041357179
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            example:
                                bio: Repellendus molestiae.
                                username: Aliquam ea aliquid corporis dolorem.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/users/{id}/bio:
        post:
            tags:
                - users
            summary: UpdateBio users
            operationId: users#UpdateBio
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    example: 8092750819571128419
                    format: int64
                  example: 4589975402484629216
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBioRequestBody'
                        example:
                            bio: Harum cum rerum est similique magni.
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/users/{id}/username:
        post:
            tags:
                - users
            summary: UpdateUsername users
            operationId: users#UpdateUsername
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    example: 1878169813977906832
                    format: int64
                  example: 8699031663705966246
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequestBody'
                        example:
                            username: Exercitationem commodi nesciunt sed.
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /swagger.json:
        get:
            tags:
                - users
            summary: Download ./gen/http/openapi.json
            operationId: users#/swagger.json
            responses:
                "200":
                    description: File downloaded
components:
    schemas:
        CreateUserRequestBody:
            type: object
            properties:
                username:
                    type: string
                    example: Non et voluptatem autem totam praesentium soluta.
            example:
                username: Iure sapiente ut doloremque nostrum culpa cupiditate.
            required:
                - username
        DeleteUserRequestBody:
            type: object
            properties:
                id:
                    type: integer
                    example: 5750432397204589644
                    format: int64
            example:
                id: 4007392058619601988
            required:
                - id
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: false
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: false
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: true
            example:
                fault: true
                id: 123abc
                message: parameter 'p' must be an integer
                name: bad_request
                temporary: true
                timeout: true
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
        UpdateBioRequestBody:
            type: object
            properties:
                bio:
                    type: string
                    example: Dolores minus eaque tempora in laborum.
            example:
                bio: Officia expedita consequuntur.
            required:
                - bio
        User:
            type: object
            properties:
                bio:
                    type: string
                    example: Officia temporibus qui nisi ipsam.
                username:
                    type: string
                    example: Impedit qui voluptas.
            example:
                bio: Ut possimus.
                username: Sapiente consequuntur modi nisi.
            required:
                - username
                - bio
tags:
    - name: users
      description: The users service performs operations on users information.
