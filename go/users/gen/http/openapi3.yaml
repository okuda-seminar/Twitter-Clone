openapi: 3.0.3
info:
    title: Users Service
    description: Service for managing users
    version: "1.0"
servers:
    - url: http://0.0.0.0:80/api/users
paths:
    /api/users:
        delete:
            tags:
                - users
            summary: DeleteUser users
            operationId: users#DeleteUser
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteUserRequestBody'
                        example:
                            id: 9017040730249194932
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            tags:
                - users
            summary: CreateUser users
            operationId: users#CreateUser
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequestBody'
                        example:
                            display_name: Facilis quidem quis at quod aspernatur quam.
                            username: Sunt eos.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            example:
                                bio: Sed ad maiores aliquid.
                                created_at: "1989-11-04T05:55:03Z"
                                display_name: Inventore accusamus nesciunt eum blanditiis facere unde.
                                id: 8190084971811879086
                                updated_at: "2011-01-16T06:13:33Z"
                                username: Laboriosam ut exercitationem qui.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/users/{id}:
        get:
            tags:
                - users
            summary: FindUserByID users
            operationId: users#FindUserByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    example: 853124055273952537
                    format: int64
                  example: 8802437498500106118
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            example:
                                bio: Praesentium similique nisi sit.
                                created_at: "2009-01-30T19:11:58Z"
                                display_name: Iure id autem.
                                id: 3629941483923070434
                                updated_at: "1995-01-24T21:37:42Z"
                                username: Ut possimus.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/users/{id}/bio:
        post:
            tags:
                - users
            summary: UpdateBio users
            operationId: users#UpdateBio
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    example: 5171046760854731574
                    format: int64
                  example: 378701858343614778
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBioRequestBody'
                        example:
                            bio: Laudantium corrupti beatae fuga corrupti.
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/users/{id}/username:
        post:
            tags:
                - users
            summary: UpdateUsername users
            operationId: users#UpdateUsername
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    example: 5622424820143763188
                    format: int64
                  example: 7956233771881647359
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUsernameRequestBody'
                        example:
                            username: Et error quo vero nesciunt quo voluptate.
            responses:
                "200":
                    description: OK response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /swagger.json:
        get:
            tags:
                - users
            summary: Download ./gen/http/openapi.json
            operationId: users#/swagger.json
            responses:
                "200":
                    description: File downloaded
components:
    schemas:
        CreateUserRequestBody:
            type: object
            properties:
                display_name:
                    type: string
                    example: Esse et nesciunt non dolor laboriosam.
                username:
                    type: string
                    example: Qui sint sapiente corporis.
            example:
                display_name: Quos voluptas qui aspernatur.
                username: Itaque pariatur ipsam molestias ipsam aut.
            required:
                - username
                - display_name
        DeleteUserRequestBody:
            type: object
            properties:
                id:
                    type: integer
                    example: 1288073891153681460
                    format: int64
            example:
                id: 8448143939769264812
            required:
                - id
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: false
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: true
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: false
            example:
                fault: false
                id: 123abc
                message: parameter 'p' must be an integer
                name: bad_request
                temporary: false
                timeout: false
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
        UpdateBioRequestBody:
            type: object
            properties:
                bio:
                    type: string
                    example: Distinctio vel harum omnis necessitatibus temporibus.
            example:
                bio: Vero ut at nostrum dolorem odit recusandae.
            required:
                - bio
        UpdateUsernameRequestBody:
            type: object
            properties:
                username:
                    type: string
                    example: Recusandae qui commodi ipsa ducimus expedita.
            example:
                username: Quis in explicabo.
            required:
                - username
        User:
            type: object
            properties:
                bio:
                    type: string
                    example: Accusamus eum est ipsam placeat.
                created_at:
                    type: string
                    example: "2011-02-16T01:02:10Z"
                    format: date-time
                display_name:
                    type: string
                    example: Laudantium expedita hic quos.
                id:
                    type: integer
                    example: 420120022597800938
                    format: int64
                updated_at:
                    type: string
                    example: "2010-04-12T00:59:33Z"
                    format: date-time
                username:
                    type: string
                    example: Dolores laborum architecto fugiat omnis iusto.
            example:
                bio: Fugit recusandae qui.
                created_at: "1979-08-17T13:14:08Z"
                display_name: Modi velit voluptatem.
                id: 3923114272923499382
                updated_at: "1994-05-19T02:44:38Z"
                username: Qui nesciunt ullam ipsam officia.
            required:
                - id
                - username
                - display_name
                - bio
                - created_at
                - updated_at
tags:
    - name: users
      description: The users service performs operations on users information.
