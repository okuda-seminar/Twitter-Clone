// Code generated by goa v3.14.0, DO NOT EDIT.
//
// users endpoints
//
// Command:
// $ goa gen users/design

package users

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "users" service endpoints.
type Endpoints struct {
	CreateUser    goa.Endpoint
	DeleteUser    goa.Endpoint
	FindUserByID  goa.Endpoint
	UpdateProfile goa.Endpoint
	Follow        goa.Endpoint
	Unfollow      goa.Endpoint
	GetFollowers  goa.Endpoint
	GetFollowings goa.Endpoint
	Mute          goa.Endpoint
	Unmute        goa.Endpoint
	Block         goa.Endpoint
	Unblock       goa.Endpoint
}

// NewEndpoints wraps the methods of the "users" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CreateUser:    NewCreateUserEndpoint(s),
		DeleteUser:    NewDeleteUserEndpoint(s),
		FindUserByID:  NewFindUserByIDEndpoint(s),
		UpdateProfile: NewUpdateProfileEndpoint(s),
		Follow:        NewFollowEndpoint(s),
		Unfollow:      NewUnfollowEndpoint(s),
		GetFollowers:  NewGetFollowersEndpoint(s),
		GetFollowings: NewGetFollowingsEndpoint(s),
		Mute:          NewMuteEndpoint(s),
		Unmute:        NewUnmuteEndpoint(s),
		Block:         NewBlockEndpoint(s),
		Unblock:       NewUnblockEndpoint(s),
	}
}

// Use applies the given middleware to all the "users" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreateUser = m(e.CreateUser)
	e.DeleteUser = m(e.DeleteUser)
	e.FindUserByID = m(e.FindUserByID)
	e.UpdateProfile = m(e.UpdateProfile)
	e.Follow = m(e.Follow)
	e.Unfollow = m(e.Unfollow)
	e.GetFollowers = m(e.GetFollowers)
	e.GetFollowings = m(e.GetFollowings)
	e.Mute = m(e.Mute)
	e.Unmute = m(e.Unmute)
	e.Block = m(e.Block)
	e.Unblock = m(e.Unblock)
}

// NewCreateUserEndpoint returns an endpoint function that calls the method
// "CreateUser" of service "users".
func NewCreateUserEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*CreateUserPayload)
		return s.CreateUser(ctx, p)
	}
}

// NewDeleteUserEndpoint returns an endpoint function that calls the method
// "DeleteUser" of service "users".
func NewDeleteUserEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeleteUserPayload)
		return nil, s.DeleteUser(ctx, p)
	}
}

// NewFindUserByIDEndpoint returns an endpoint function that calls the method
// "FindUserByID" of service "users".
func NewFindUserByIDEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*FindUserByIDPayload)
		return s.FindUserByID(ctx, p)
	}
}

// NewUpdateProfileEndpoint returns an endpoint function that calls the method
// "UpdateProfile" of service "users".
func NewUpdateProfileEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateProfilePayload)
		return nil, s.UpdateProfile(ctx, p)
	}
}

// NewFollowEndpoint returns an endpoint function that calls the method
// "Follow" of service "users".
func NewFollowEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*FollowPayload)
		return nil, s.Follow(ctx, p)
	}
}

// NewUnfollowEndpoint returns an endpoint function that calls the method
// "Unfollow" of service "users".
func NewUnfollowEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UnfollowPayload)
		return nil, s.Unfollow(ctx, p)
	}
}

// NewGetFollowersEndpoint returns an endpoint function that calls the method
// "GetFollowers" of service "users".
func NewGetFollowersEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetFollowersPayload)
		return s.GetFollowers(ctx, p)
	}
}

// NewGetFollowingsEndpoint returns an endpoint function that calls the method
// "GetFollowings" of service "users".
func NewGetFollowingsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetFollowingsPayload)
		return s.GetFollowings(ctx, p)
	}
}

// NewMuteEndpoint returns an endpoint function that calls the method "Mute" of
// service "users".
func NewMuteEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*MutePayload)
		return nil, s.Mute(ctx, p)
	}
}

// NewUnmuteEndpoint returns an endpoint function that calls the method
// "Unmute" of service "users".
func NewUnmuteEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UnmutePayload)
		return nil, s.Unmute(ctx, p)
	}
}

// NewBlockEndpoint returns an endpoint function that calls the method "Block"
// of service "users".
func NewBlockEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*BlockPayload)
		return nil, s.Block(ctx, p)
	}
}

// NewUnblockEndpoint returns an endpoint function that calls the method
// "Unblock" of service "users".
func NewUnblockEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UnblockPayload)
		return nil, s.Unblock(ctx, p)
	}
}
